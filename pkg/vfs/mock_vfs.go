// Code generated by MockGen. DO NOT EDIT.
// Source: vfs.go

// Package vfs is a generated GoMock package.
package vfs

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockVirtualFileSystem is a mock of VirtualFileSystem interface.
type MockVirtualFileSystem struct {
	ctrl     *gomock.Controller
	recorder *MockVirtualFileSystemMockRecorder
}

// MockVirtualFileSystemMockRecorder is the mock recorder for MockVirtualFileSystem.
type MockVirtualFileSystemMockRecorder struct {
	mock *MockVirtualFileSystem
}

// NewMockVirtualFileSystem creates a new mock instance.
func NewMockVirtualFileSystem(ctrl *gomock.Controller) *MockVirtualFileSystem {
	mock := &MockVirtualFileSystem{ctrl: ctrl}
	mock.recorder = &MockVirtualFileSystemMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVirtualFileSystem) EXPECT() *MockVirtualFileSystemMockRecorder {
	return m.recorder
}

// Load mocks base method.
func (m *MockVirtualFileSystem) Load() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Load")
	ret0, _ := ret[0].(error)
	return ret0
}

// Load indicates an expected call of Load.
func (mr *MockVirtualFileSystemMockRecorder) Load() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Load", reflect.TypeOf((*MockVirtualFileSystem)(nil).Load))
}

// Save mocks base method.
func (m *MockVirtualFileSystem) Save() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save")
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockVirtualFileSystemMockRecorder) Save() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockVirtualFileSystem)(nil).Save))
}
